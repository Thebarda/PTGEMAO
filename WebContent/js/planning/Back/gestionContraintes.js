// Generated by CoffeeScript 1.10.0
(function() {
  var tabJSON;

  tabJSON = [];

  $(document).ready(function() {
    var ajouterDansTableauJSON, mettreAJourPhrases, remplirTextArea;
    ajouterDansTableauJSON = function() {
      var contrainteJSON, heureDebContrainte, heureFinContrainte, idJour, idSalle, messageContrainte, minuteDebContrainte, minuteFinContrainte;
      idJour = $("#jourContrainte").val();
      idSalle = $("#salleContrainte").val();
      heureDebContrainte = $("#heureDebContrainte").val();
      minuteDebContrainte = $("#minuteDebContrainte").val();
      heureFinContrainte = $("#heureFinContrainte").val();
      minuteFinContrainte = $("#minuteFinContrainte").val();
      messageContrainte = $("#messageContrainte").val();
      contrainteJSON = {
        idJour: idJour,
        idSalle: idSalle,
        heureDebContrainte: heureDebContrainte,
        minuteDebContrainte: minuteDebContrainte,
        heureFinContrainte: heureFinContrainte,
        minuteFinContrainte: minuteFinContrainte,
        messageContrainte: messageContrainte
      };
      tabJSON.push(contrainteJSON);
      $("#heureDebContrainte").val("");
      $("#minuteDebContrainte").val("");
      $("#heureFinContrainte").val("");
      $("#minuteFinContrainte").val("");
      return $("#messageContrainte").val("");
    };
    remplirTextArea = function() {
      return $("#jsonContraintes").val(JSON.stringify(tabJSON));
    };
    mettreAJourPhrases = function() {
      var hDebC, hFinC, jour, mDebC, mFinC, message, phrase;
      phrase = "<p class=\"text-align\">Le créneau ne pourra pas être placé ";
      if ($("#salleContrainte").val() !== null) {
        phrase += "en " + $("#salleContrainte option:selected").text();
      }
      jour = $("#jourContrainte");
      hDebC = $("#heureDebContrainte");
      mDebC = $("#minuteDebContrainte");
      hFinC = $("#heureFinContrainte");
      mFinC = $("#minuteFinContrainte");
      message = $("#messageContrainte").val();
      toastr.options = {
        "closeButton": true,
        "debug": false,
        "newestOnTop": false,
        "progressBar": true,
        "positionClass": "toast-top-right",
        "preventDuplicates": false,
        "onclick": null,
        "showDuration": "500",
        "hideDuration": "1000",
        "timeOut": "5000",
        "extendedTimeOut": "1000",
        "showEasing": "swing",
        "hideEasing": "linear",
        "showMethod": "fadeIn",
        "hideMethod": "fadeOut"
      };
      if (jour.val() !== null) {
        if ($("#jourContrainte option:selected").text() === "Tous les jours") {
          phrase += " pour tous les jours ";
        } else {
          phrase += " le " + $("#jourContrainte option:selected").text();
        }
      }
      if (mDebC.val() !== "" && hDebC.val() === "") {
        throw "Indiquez une heure de début";
      }
      if (mFinC.val() !== "" && hFinC.val() === "") {
        throw "Indiquez une heure de fin";
      }
      if (hDebC.val() !== "" && hFinC.val() === "") {
        throw "Indiquez une heure de fin";
      }
      if (hFinC.val() !== "" && hDebC.val() === "") {
        throw "Indiquez une heure de début";
      }
      console.log(hDebC.val());
      console.log(hFinC.val());
      console.log(hDebC.val() < hFinC.val());
      if (hDebC.val() !== "" && hFinC.val() !== "" && parseInt(hDebC.val()) > parseInt(hFinC.val())) {
        throw "L'heure de début ne peut pas être postérieure à l'heure de fin";
      }
      if (hDebC.val() === hFinC.val() && mDebC.val() > mFinC.val()) {
        throw "L'horaire de fin ne peut pas être antérieur à l'heure de début";
      }
      if (hDebC.val() !== "") {
        phrase += " de " + hDebC.val() + "h";
      }
      if (mDebC.val() !== "") {
        phrase += mDebC.val();
      }
      if (hFinC.val() !== "") {
        phrase += " à " + hFinC.val() + "h";
      }
      if (mFinC.val() !== "") {
        phrase += mFinC.val();
      }
      if (message !== "") {
        phrase += " pour la raison : \"" + message + "\"";
      }
      phrase += "</p>";
      return $("#restrictionsPhrases").append(phrase);
    };
    $("#ajouterContrainte").click(function() {
      var error, error1;
      try {
        mettreAJourPhrases();
        return ajouterDansTableauJSON();
      } catch (error1) {
        error = error1;
        return toastr.error(error, "Erreur de contrainte");
      }
    });
    return $(".submitJSON").click(function() {
      return remplirTextArea();
    });
  });

}).call(this);
